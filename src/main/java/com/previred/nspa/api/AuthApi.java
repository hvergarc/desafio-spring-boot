/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.0.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.previred.nspa.api;

import java.util.Optional;

import javax.annotation.Generated;
import javax.validation.Valid;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.context.request.NativeWebRequest;

import com.previred.nspa.model.AuthPost200ResponseDTO;
import com.previred.nspa.model.UsuariosDTO;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-04-01T19:02:29.794985500-03:00[America/Santiago]")
@Validated
@Tag(name = "auth", description = "the auth API")
public interface AuthApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /auth : Autenticaci贸n de usuarios
     *
     * @param usuariosDTO  (required)
     * @return Autenticaci贸n exitosa (status code 200)
     */
    @Operation(
        operationId = "authPost",
        summary = "Autenticaci贸n de usuarios",
        responses = {
            @ApiResponse(responseCode = "200", description = "Autenticaci贸n exitosa", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = AuthPost200ResponseDTO.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/auth",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<AuthPost200ResponseDTO> authPost(
        @Parameter(name = "UsuariosDTO", description = "", required = true) @Valid @RequestBody UsuariosDTO usuariosDTO
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"token\" : \"token\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
